<project name="CDE Curation Tool" default="init" basedir=".">
    <description>
        Build and deploy the CDE Curation Tool
    </description>
    <!--Note: Curation tool uses java sdk 1.4.2. Please set the environment variable and class path this-->

    <!--Set the environment package-->
    <property environment="env"/>

    <!-- set global properties for compiled temp directory -->
    <property name="isOverWrite" value="NO"/>   <!-- set this to YES when jar file changed or when files need copying regardless of the data change -->

    <!-- set global properties for output directory -->
    <property name="app_root" location="${env.CATALINA_HOME}/webapps/cdecurate"/>
    <property name="app_jsp" location="${app_root}/jsp"/>
    <property name="app_asset" location="${app_root}/Assets"/>
    <property name="app_webinf" location="${app_root}/WEB-INF"/>
    <property name="app_classes" location="${app_webinf}/classes"/>
    <property name="app_class" location="${app_classes}/com/scenpro/NCICuration"/>
    <property name="app_jclass" location="${app_classes}/org/apache/jsp"/>
    <property name="app_lib" location="${app_webinf}/lib"/>
    <property name="app_tld" location="${app_webinf}/tld"/>
    <property name="app_war" location="distrib/war"/>
    
    <!-- set global properties for source directory -->
    <property name="m_java" location="src"/>
    <property name="m_xml" location="ui/WEB-INF"/>
    <property name="m_tld" location="ui/WEB-INF/tld"/>
    <property name="m_lib" location="lib"/>
    <property name="m_web" location="ui"/>
    
    <!--Set the source path for java files and jsp files to compile-->
    <path id="srcpath">
        <pathelement location="${m_java}"/>
    </path>
    <path id="jspsrcpath">
        <pathelement  location="${app_classes}/jsp"/>
    </path>

    <!--Set the source path for lib files to compile-->
    <path id="libpath">
      <pathelement location="${m_lib}/jasper-compiler.jar"/>
      <pathelement location="${m_lib}/servlet.jar"/>
      <pathelement location="${m_lib}/jasper-runtime.jar"/>
      <pathelement location="${m_lib}/ant.jar"/>
      <pathelement location="${m_lib}/classes12.jar"/>
      <pathelement location="${m_lib}/client.jar"/>
      <pathelement location="${m_lib}/xerces.jar"/>
      <pathelement location="${m_lib}/alteredHibernate2.jar"/>
      <pathelement location="${m_lib}/log4j.jar"/>
      <pathelement location="${m_lib}/aspectjrt.jar"/>
      <pathelement location="${m_lib}/aspectjtools.jar"/>
      <pathelement location="${m_lib}/cglib-full-2.0.1.jar"/>
      <pathelement location="${m_lib}/hibernate3.jar"/>
      <pathelement location="${m_lib}/commons-logging.jar"/>
    </path>

    <!-- init target -->
    <target name="init">
        <echo message="This build script must be run with the name of the desired target: build-local, build-dev, build-qa, build-stage, build-prod."/>
    </target>

    <!-- make temporary build directory  -->
    <target name="clean">
      <property name="isOverWrite" value="YES"/>
    	<delete dir="${app_root}"/>
    	<mkdir dir="${app_root}"/>
    	<mkdir dir="${app_jsp}"/>
    	<mkdir dir="${app_asset}"/>
    	<mkdir dir="${app_webinf}"/>
    	<mkdir dir="${app_classes}"/>
    	<mkdir dir="${app_lib}"/>
    	<mkdir dir="${app_tld}"/>
    </target>
 
    <!-- copy web content to app_root (tomcat) build directory  
    <target name="setup" depends="clean">-->
    <target name="setup">
        <!-- copy html, css, login jsp to cdecurate directory  -->
        <copy todir="${app_root}" overwrite="${isOverWrite}">
            <fileset dir="${m_web}/css/cdecurate" excludes="**/*CVS*"/>
            <fileset dir="${m_web}/jsp/cdecurate" excludes="**/*CVS*"/>
            <fileset dir="${m_web}/html/cdecurate" excludes="**/*CVS*"/>
        </copy>
        <!-- copy css, all jsp to cdecurate/jsp directory  -->
        <copy todir="${app_jsp}" overwrite="${isOverWrite}">
            <fileset dir="${m_web}/css/jsp" excludes="**/*CVS*"/>
            <fileset dir="${m_web}/jsp/jsp" excludes="**/*CVS*"/>
        </copy>
        <!-- copy css, html, script, images to cdecurate/Assets directory  -->
        <copy todir="${app_asset}" overwrite="${isOverWrite}">
            <fileset dir="${m_web}/css/asset" excludes="**/*CVS*"/>
            <fileset dir="${m_web}/html/asset" excludes="**/*CVS*"/>
            <fileset dir="${m_web}/scripts" excludes="**/*CVS*"/>
            <fileset dir="${m_web}/images" excludes="**/*CVS*"/>
        </copy>
        <!-- copy web.xml to cdecurate/WEB-INF directory needes when not deploying -->
        <copy todir="${app_webinf}" overwrite="YES">
            <fileset file="${m_xml}/web.xml"/>
        </copy> 
       <!-- copy caBIO.jar to cdecurate/WEB-INF/lib directory  -->
       <copy todir="${app_lib}" overwrite="${isOverWrite}">
          <fileset file="${m_lib}/client.jar"/>
        </copy>  
        <!-- copy tld to cdecurate/WEB-INF/tld directory  -->
        <copy todir="${app_tld}" overwrite="${isOverWrite}">
            <fileset dir="${m_tld}" excludes="**/*CVS*"/>
        </copy>
    </target>

    <!--compile jsp, java files -->
    <target name="compile" depends="init,setup">
      <!--Compile Java source files-->
      <javac destdir="${app_classes}" encoding="Cp1252">
          <classpath refid="libpath"/>
          <src refid="srcpath"/>
          <include name="**/*.java" />
      </javac>
      <!-- compile jsp files which makes jsp.java file  --> 
      <jspc srcdir="${app_jsp}" destdir="${app_classes}" compiler="jasper41"> 
        <classpath refid="libpath"/>
        <include name="**/*.jsp" />
      </jspc>  
      <!-- compile jsp.java files   -->
      <javac destdir="${app_classes}" encoding="Cp1252">
          <classpath refid="libpath"/>
          <src refid="jspsrcpath"/>
          <include name="**/*.java" />
      </javac> 
      <!-- copy property file to cdecurate/WEB-INF/classes/com/scenpro/NCICuration directory  -->
      <copy file="${m_java}/com/scenpro/NCICuration/NCICuration.properties" tofile="${app_class}/NCICuration.properties" overwrite="${isOverWrite}"/>      
    </target>
    
    <!-- only compiles both jsp and java files and outputs to app_root-->
    <target name="make" depends="compile"/>

    <!--cleans, compiles both jsp and java files and outputs to app_root-->
    <target name="rebuild" depends="clean,compile"/>
  
    <!-- deploy the war file -->
    <target name="deploy" depends="make">
        <delete file="${app_war}/cdecurate.war"/>
        <delete dir="${app_classes}/jsp"/>
        <delete file="${app_webinf}/web.xml"/>  <!-- remove it to make war -->
        <!-- make war -->
        <war destfile="${app_war}/cdecurate.war" basedir="${app_root}" update="true" webxml="${m_xml}/web.xml">
        </war>
        <!-- copy web.xml back to cdecurate/WEB-INF directory-->
        <copy todir="${app_webinf}" overwrite="YES">
            <fileset file="${m_xml}/web.xml"/>
        </copy> 
    </target>

    <!-- do the antcall for local environ -->
    <target name="build-local">
        <echo message="Building : local war file."/>
        <!-- copy qa caBIO.jar to lib directory and copy local web.xml to conf/web
        <copy file="${m_lib}/cabio-stage/caBIO.jar" tofile="${m_lib}/caBIO.jar" overwrite="YES"/>-->
        <copy file="conf/local/web.xml" tofile="${m_xml}/web.xml" overwrite="YES"/>
       <!--  do antcall task to deply war -->
        <antcall target="deploy">
            <param name="conf" value="conf/local"/>
            <param name="jdebug" value="on"/>
        </antcall>
        <copy file="${app_war}/cdecurate.war" tofile="D:/jboss-4.0.1/server/default/deploy/cdecurate.war" overwrite="YES"/>
    </target>

    <!-- do the antcall for dev environ -->
    <target name="build-dev" depends="clean">
        <echo message="Building : dev war file."/>
        <!-- copy qa cabio.jar to lib directory and copy dev web.xml to conf/web
        <copy file="${m_lib}/cabio-dev/caBIO.jar" tofile="${m_lib}/caBIO.jar" overwrite="YES"/>-->
        <copy file="conf/dev/web.xml" tofile="${m_xml}/web.xml" overwrite="YES"/>
        <!-- do antcall task to deply war -->
        <antcall target="deploy">
            <param name="conf" value="conf/dev"/>
            <param name="jdebug" value="on"/>
        </antcall>
    </target>

    <!-- do the antcall for qa environ -->
    <target name="build-qa" depends="clean">
        <echo message="Building : qa war file."/>
        <!-- copy qa cabio.jar to lib directory and copy qa web.xml to conf/web
        <copy file="${m_lib}/cabio-qa/caBIO.jar" tofile="${m_lib}/caBIO.jar" overwrite="YES"/>-->
        <copy file="conf/qa/web.xml" tofile="${m_xml}/web.xml" overwrite="YES"/>
        <!-- do antcall task to deply war -->
        <antcall target="deploy">
            <param name="conf" value="conf/qa"/>
            <param name="jdebug" value="on"/>
        </antcall>
    </target>

    <!-- do the antcall for stage environ -->
    <target name="build-stage">
        <echo message="Building : stage war file."/>
        <!-- copy stage cabio.jar to lib directory and copy stage web.xml to conf/web
        <copy file="${m_lib}/cabio-stage/caBIO.jar" tofile="${m_lib}/caBIO.jar" overwrite="YES"/>-->
        <copy file="conf/stage/web.xml" tofile="${m_xml}/web.xml" overwrite="YES"/>
        <!-- do antcall task to deply war -->
        <antcall target="deploy">
            <param name="conf" value="conf/stage"/>
            <param name="jdebug" value="on"/>
        </antcall>
    </target>

    <!-- do the antcall for prod environ -->
    <target name="build-prod">
        <echo message="Building : prod war file."/>
        <!-- copy stage cabio.jar to lib directory and copy prod web.xml to conf/web
        <copy file="${m_lib}/cabio-prod/caBIO.jar" tofile="${m_lib}/caBIO.jar" overwrite="YES"/>-->
        <copy file="conf/prod/web.xml" tofile="${m_xml}/web.xml" overwrite="YES"/>
        <!-- do antcall task to deply war -->
        <antcall target="deploy">
            <param name="conf" value="conf/prod"/>
            <param name="jdebug" value="on"/>
        </antcall>
    </target>

    <!-- do the antcall for qa environ -->
    <target name="copy-nci-cvs">
        <echo message="copy changed files to NCI-CVS directory."/>
        <property name="nci_cvs" location="E:/NCI_CVS/cdecurate"/>  <!--main folder -->
        <property name="nci_java" location="${nci_cvs}/src"/>  <!--java source folder -->
        <property name="nci_web" location="${nci_cvs}/ui"/>    <!--UI/ web contentfolder -->
        <property name="nci_tld" location="${nci_cvs}/conf/web/tld"/>   <!--tld under conf folder -->
        <property name="nci_lib" location="${nci_cvs}/lib"/>   <!--lib folder -->
        <!-- copy scr, ui directory -->
        <copy todir="${nci_java}">
            <fileset dir="${m_java}" excludes="**/*CVS*"/>
        </copy>
        <copy todir="${nci_web}">
            <fileset dir="${m_web}" excludes="**/*CVS*"/>
        </copy>        
        <copy todir="${nci_tld}">
            <fileset dir="${m_tld}" excludes="**/*CVS*"/>
        </copy>        
        <copy todir="${nci_lib}">
            <fileset dir="${m_lib}" excludes="**/*CVS*"/>
        </copy>        
        <delete dir="${nci_web}/WEB-INF"/>
    </target>

</project>
